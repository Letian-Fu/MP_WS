<launch>
  
  <!-- Launch Gazebo  -->
  <include file="$(find gp_planner)/launch/cr5_gazebo.launch" />

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find gp_planner)/config/cr5_gazebo_controllers.yaml" />
  <include file="$(dirname)/cr5_controllers.launch"/>

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- moveit launch file -->
  <!-- <include file="$(find cr5_moveit_config)/launch/moveit_planning_execution.launch" /> -->
  <!-- <include file="$(find cr5_moveit_config)/launch/demo.launch" pass_all_args="true">
    <arg name="load_robot_description" value="false" />
    <arg name="moveit_controller_manager" value="ros_control" />
  </include> -->

  <!-- <rosparam command="load" file="$(find gp_planner)/config/parameters.yaml" /> -->
  <!-- <node name="moving_sphere" pkg="gp_planner" type="moving_sphere.py" output="screen" /> -->
  <!-- <node name="static_sdf" pkg="gp_planner" type="static_sdf.py" output="screen" /> -->
  <!-- <node name="dynamic_sdf" pkg="gp_planner" type="dynamic_sdf.py" output="screen" /> -->

</launch>
